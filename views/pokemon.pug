extends ./header.pug
block append head
	meta(
		property="og:image",
		content=`https://pokemon.helbling.uk/static/previews/pokemon/${id}.png`
	)
	meta(
		name="twitter:image",
		content=`https://pokemon.helbling.uk/static/previews/pokemon/${id}.png`
	)
	meta(
		property="og:description",
		content=`${primaryName ? primaryName : secondaryName} on the Pokécompanion`
	)
	meta(
		name="twitter:description",
		content=`${primaryName ? primaryName : secondaryName} on the Pokécompanion`
	)

	script(src="/static/js/pokemon.js")
	script(src="/static/js/giffer.min.js")
block append body
	if selectedGames.version_group_name === "all"
		.notification.is-warning
			p Select a game from the "Options" section to see its Pokédex entry and Moveset.
	else if moveset.length === 0
		.notification.is-warning
			p This Pokémon is not in the game you selected. Moveset and Pokédex entries are hidden.

	//- Navigator
	.columns.is-mobile
		.column.is-one-third
			if (id-1 > 0)
				.card.otherEntry.is-pulled-left
					a.keepQuery(href=`/pokemon/${id - 1}`)
						.card-content.otherEntryContent
							p.otherNumber ##{ id - 1 }
							img.otherSprite(
								src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id - 1}.png`,
								alt="Sprite for the Pokémon with the previous Pokédex entry"
							)
		.column.has-text-centered(style="display: inline-flex")
			p.title.is-4(style="margin: auto") ##{ id }
		.column.is-one-third
			if (id + 1) <= highestPokedexId
				.card.otherEntry.is-pulled-right
					a.keepQuery(href=`/pokemon/${id + 1}`)
						.card-content.otherEntryContent
							img.otherSprite(
								src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id + 1}.png`,
								alt="Sprite for the Pokémon with the next Pokédex entry"
							)
							p.otherNumber ##{ id + 1 }

	//- Sprites and Evolutions
	.columns
		//- Sprites
		.column.is-flex
			.card(style="width: 100%")
				.card-header-title.is-justify-content-space-between
					if primaryName && !secondaryName
						p #{ primaryName }
					else if !primaryName && secondaryName
						p #{ secondaryName }
					else if primaryName === secondaryName
						p #{ primaryName }
					else
						p #{ primaryName } - #{ secondaryName }

					div
						each pType in types
							img.pl-2.typeSprite(src=`${pType.sprite}`, alt=`${pType.name}`)
				.card-content
					.columns.mb-0.is-mobile
						.column
							.has-text-centered
								if sprites.primary.includes(".gif")
									img#sprite-front.pokemonSprite(
										src=`${sprites.primary}`,
										data-gifffer=`${sprites.primary}`,
										alt=`${primaryName} from the front`
									)
								else
									img#sprite-front.pokemonSprite(
										src=`${sprites.primary}`,
										alt=`${primaryName} from the front`
									)
								p#primarySupportText.is-italic
						if sprites.primary !== sprites.secondary
							.column
								.has-text-centered
									if sprites.secondary.includes(".gif")
										img#sprite-back.pokemonSprite(
											src=`${sprites.secondary}`,
											data-gifffer=`${sprites.secondary}`,
											alt=`Alternative ${primaryName} sprite`
										)
									else
										img#sprite-back.pokemonSprite(
											src=`${sprites.secondary}`,
											alt=`Alternative ${primaryName} sprite`
										)
									p#secondarySupportText.is-italic
		//- Evolutions
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Evolution chain
				.card-content.pt-1
					if evolutions.length === 0
						p This Pokémon has no evolutions.
					each evolution in evolutions
						.columns.is-vcentered.is-mobile
							.column.has-text-centered
								a.keepQuery.invisible(href=`${evolution.sourceURL}`)
									img.link(
										src=`${evolution.sourceSprite}`,
										alt="This evolution line's source Pokémon"
									)
							.column.has-text-centered
								if evolution.trigger.includes("Level")
									p #{ evolution.trigger }
								else if evolution.trigger === "trade"
									p Trade
								else if evolution.trigger === "shed"
									p.is-underlined(
										onclick="document.getElementById('moreInfo').toggleAttribute('hidden');"
									) Shed
									p#moreInfo(hidden) Have 1+ free party slots during evolution
								else if evolution.trigger === "tower-of-darkness"
									p Single Strike Style in Tower of Darkness
								else if evolution.trigger === "tower-of-waters"
									p Rapid Strike Style in Tower of Waters
								else if evolution.trigger === "spin"
									p.is-underlined(
										onclick="document.getElementById('moreInfo').toggleAttribute('hidden');"
									) Expand
									p#moreInfo(hidden) Spin and strike a pose while Milcery holds a Sweet

								each requirement in evolution.requirements
									if requirement.type === "gender"
										p #{ requirement.info }
									if requirement.type === "use-item"
										//- Tart and Sweet apples don't have their item sprites uploaded yet!
										if requirement.supplementary.includes("1175")
											.container
												p Use Tart Apple
										else if requirement.supplementary.includes("1174")
											.container
												p Use Sweet Apple
										else
											a.keepQuery.invisible(href=`${requirement.supplementary}`)
												.container
													p(style="vertical-align: middle; display: inline") Use
													img(
														src=`${requirement.info}`,
														title=`${requirement.info.split("/")[8].split(".")[0]}`,
														style="vertical-align: middle",
														alt="Sprite for the item that needs to be used"
													)
									if requirement.type === "hold-item"
										.container
											p(style="vertical-align: middle; display: inline") Hold
											a.keepQuery.invisible(href=`${requirement.supplementary}`)
												img.link(
													src=`${requirement.info}`,
													style="vertical-align: middle",
													title=`${requirement.info.split("/")[8].split(".")[0]}`,
													alt="Sprite for the item that this Pokémon needs to hold"
												)
									if requirement.type === "friendship"
										p Friendship: #{ requirement.info }
									if requirement.type === "beauty"
										p Beauty: #{ requirement.info }
									if requirement.type === "rain"
										p Raining
									if requirement.type === "daytime"
										p.is-capitalized #{ requirement.info }
									if requirement.type === "know_move"
										a.keepQuery.invisible(href=`${requirement.info}`)
											p.link Knows: #{ requirement.supplementary }
									if requirement.type === "know_move_type"
										p Know move of type: #{ requirement.info }
									if requirement.type === "affection"
										p Affection: #{ requirement.info }
									if requirement.type === "location"
										p Go to: #{ requirement.info }
									if requirement.type === "stats"
										p #{ requirement.info }
									if requirement.type === "three-critical-hits"
										p.is-underlined(
											onclick="document.getElementById('moreInfo').toggleAttribute('hidden');"
										) Expand
										p#moreInfo(hidden) Land 3 critical hits in one battle
									if requirement.type === "trade_for"
										.div(style="display: inline")
											p Trade for
											p.link(
												onclick=`location.href='${requirement.supplementary}' + removeVarieties()`
											) #{ requirement.info }
									if requirement.type === "party_have"
										.div(style="display: inline")
											p Party has
											p.link(
												onclick=`location.href='${requirement.supplementary}' + removeVarieties()`
											) #{ requirement.info }
									if requirement.type === "party_type"
										p #{ requirement.info }
									if requirement.type === "other"
										p.is-underlined(
											onclick="document.getElementById('moreInfo').toggleAttribute('hidden');"
										) Expand
										p#moreInfo(hidden) #{ requirement.info }

							.column.has-text-centered
								a.keepQuery.invisible(href=`${evolution.targetURL}`)
									img.link(
										src=`${evolution.targetSprite}`,
										alt="This evolution line's target Pokémon"
									)
	//- Type matchups and Abilities
	.columns
		//- Type matchups
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Type matchups
				.card-content
					.columns
						.column.is-flex
							.box.accented.nohover(style="width: 100%")
								p.has-text-weight-bold.pb-2 Resists
									each values in defensiveTyping
										if values.multiplier < 1
											div
												.pb-1(style="display: inline-flex")
													img.pr-2(src=`${values.sprite}`)
													if values.multiplier < 0.5
														p.has-text-weight-bold x#{ values.multiplier }
													else
														p x#{ values.multiplier }
						.column.is-flex
							.box.accented.nohover(style="width: 100%")
								p.has-text-weight-bold.pb-2 Weak against
									each values in defensiveTyping
										if values.multiplier > 1
											div
												.pb-1(style="display: inline-flex")
													img.pr-2(src=`${values.sprite}`)
													if values.multiplier > 2
														p.has-text-weight-bold x#{ values.multiplier }
													else
														p x#{ values.multiplier }
		//- Base stats
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Base stats
				.card-content
					table#statsTable.table(style="width: 100%")
						thead
							tr
								th Name
								th Stat
								th Avg
								th EV
						tbody
							tr
								if baseStats.hp.stat > 68 + 5
									td.has-text-success-dark HP
								else if baseStats.hp.stat < 68 - 5
									td.has-text-danger-dark HP
								else
									td HP
								td #{ baseStats.hp.stat }
								td 68
								td #{ baseStats.hp.effort }
							tr
								if baseStats.attack.stat > 76 + 5
									td.has-text-success-dark Attack
								else if baseStats.attack.stat < 76 - 5
									td.has-text-danger-dark Attack
								else
									td Attack
								td #{ baseStats.attack.stat }
								td 76
								td #{ baseStats.attack.effort }
							tr
								if baseStats.defense.stat > 72 + 5
									td.has-text-success-dark Defense
								else if baseStats.defense.stat < 72 - 5
									td.has-text-danger-dark Defense
								else
									td Defense
								td #{ baseStats.defense.stat }
								td 72
								td #{ baseStats.defense.effort }
							tr
								if baseStats.special_attack.stat > 70 + 5
									td.has-text-success-dark Special Attack
								else if baseStats.special_attack.stat < 70 - 5
									td.has-text-danger-dark Special Attack
								else
									td Special Attack
								td #{ baseStats.special_attack.stat }
								td 70
								td #{ baseStats.special_attack.effort }
							tr
								if baseStats.special_defense.stat > 70 + 5
									td.has-text-success-dark Special Defense
								else if baseStats.special_defense.stat < 70 - 5
									td.has-text-danger-dark Special Defense
								else
									td Special Defense
								td #{ baseStats.special_defense.stat }
								td 70
								td #{ baseStats.special_defense.effort }
							tr
								if baseStats.speed.stat > 66 + 5
									td.has-text-success-dark Speed
								else if baseStats.speed.stat < 66 - 5
									td.has-text-danger-dark Speed
								else
									td Speed
								td #{ baseStats.speed.stat }
								td 66
								td #{ baseStats.speed.effort }
							tfoot
								tr
									th Pkmn Base Stat:
									td #{ ((baseStats.hp.stat + baseStats.attack.stat + baseStats.defense.stat + baseStats.special_attack.stat + baseStats.special_defense.stat + baseStats.speed.stat) / 6).toFixed(2) }
									td 70.85
									td

	//- Abilities and Pokedex
	.columns
		//- Abilities
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Abilities
				.card-content
					each ability in abilities
						.box.accented.link
							a.keepQuery.invisible(href=`${ability.link}`)
								p.has-text-weight-bold #{ ability.name }
								if ability.isHidden
									p.is-italic Hidden
								p #{ ability.effect }
		//- Pokedex
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Pokédex entry
				.card-content.pt-1
					.columns
						.column
							p Weight: #{ weight } kg
						.column
							p Height: #{ height }0 cm
					if pokedex.length > 0
						each entry in pokedex
							.box.accented.noHover
								p.is-capitalized.has-text-weight-bold #{ entry.game }
								p.pb-2 #{ entry.entry }
					else if pokedex.length === 0 && game != "all"
						p No data
					else
						p Select a game where this Pokémon is featured to see its Pokédex entry.

	//- Other info
	.columns
		.column.is-flex
			.card.collapsible(style="width: 100%")
				.card-header-title
					p Other Info
				.card-content
					p.title.is-6 Catch rate: #{ captureRate }
					progress.progress.is-medium(max=255, value=`${captureRate}`) #{ captureRate }%
					p This is the base capture rate of this Pokémon - it should be used as an approximation for how difficult it is to catch. A higher catch rate means a Pokémon is easier to catch.
					br
					p.title.is-6.mb-2 Growth rate: #{ growthRate }
					p How quickly this Pokémon is able to level-up

	//- Forms and Moveset
	.columns
		.column
			.card.collapsible
				.card-header-title
					p Forms
				.card-content
					each form in forms
						.columns.is-flex
							a.keepQuery.invisible.column(href=`${form.url}`, style="width: 50%")
								.box.accented(style="text-align: center; height: 100%")
									img.image.formPrimary(
										src=`${form.sprites.primary}`,
										style="margin: auto",
										alt=`Primary sprite for ${form.name}`
									)
									p(style="margin-top: 15px") #{ form.name }
							a.keepQuery.invisible.column.shiny(href=`${form.url}`, style="width: 50%")
								.box.accented(style="text-align: center; height: 100%")
									img.image.formPrimary(
										src=`${form.sprites.shiny}`,
										style="margin: auto",
										alt=`Shiny sprite for ${form.name}`
									)
									p(style="margin-top: 15px") Shiny #{ form.name }
		if moveset.length > 0
			.column
				.card.collapsible
					.card-header-title
						p Moveset
					.card-content.pt-1
						table.table.is-striped.is-hoverable(style="width: 100%")
							thead
								tr
									th.pl-0 Type
									th.pl-0 Name
									th.pl-0 Level
							tbody(style="width: 100%")
							each move in moveset
								tr.link(onclick=`location.href='${move.link}' + removeVarieties()`)
									td.pl-0(style="width: 70px")
										.container(style="display: inline-grid")
											img.icon.tableImage(
												src=`${move.type_sprite}`,
												style="width: 50px; height: 20px",
												alt=`${move.type[0].toUpperCase() + move.type.slice(1)}`
											)
											img.icon.tableImage.mt-1(
												src=`${move.attack_type_sprite}`,
												style="width: 50px; height: 20px",
												alt=`${move.attack_type}`
											)
									td.pl-0
										if move.primaryLanguage === move.secondaryLanguage || !move.secondaryLanguage
											p #{ move.primaryLanguage }
										else
											p #{ move.primaryLanguage }
											p #{ move.secondaryLanguage }
									td.pl-0
										if move.learning_method !== "level-up"
											if move.learning_method === "machine"
												p TM/VM
											else if move.learning_method === "tutor"
												p Tutor
												p Erlernt
											else if move.learning_method === "egg"
												p Egg
												p Ei
										else
											p Lv. #{ move.level_learnt }
